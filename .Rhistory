means.sim[i]=mean(Y)
}
means.sim
mean(means.sim)
hist(means.sim, probaility=T,main="Histogram of 500 Sample means",xlim=c(-2,2),ylim=c(0,1.5))
hist(means.sim, probability=T,main="Histogram of 500 Sample means",xlim=c(-2,2),ylim=c(0,1.5))
hist(means.sim, probability=T,main="Histogram of 500 Sample means",xlim=c(-2,2),ylim=c(0,1.5))
curve(dnorm(x,mean=0,sd=1/2),col="darkblue",lwd-2,add=TRUE)
curve(dnorm(x,mean=0,sd=1/2),col="darkblue",1wd-2,add=TRUE)
curve(dnorm(x,mean=0,sd=1/2),col="darkblue",lwd=2,add=TRUE)
curve(dnorm(x,mean=0,sd=1),col="darkred",lwd=2,add=TRUE)
nsim=500
means.sim=rep(0,nsim)
for(i in 1:nsim){
+     Y=prob8.1
+     means.sim[i]=mean(Y)
+     }
for(i in 1:nsim){
+     Y=rnorm(n,mean=.9,sd=.15)
+     means.sim[i]=mean(Y)
+     }
for(i in 1:nsim){
Y=rnorm(n,mean=.9,sd=.15)
means.sim[i]=mean(Y)
}
mean(means.sim)
hist(means.sim, probability=T,main="Histogram of 500 Sample means",xlim=c(-2,2),ylim=c(0,1.5))
clear
n=125
prob8.1=rnorm(n,mean=.9,sd=.15)
mean(prob8.1)
nsim=500
means.sim=rep(0,nsim)
for(i in 1:nsim){
Y=rnorm(n,mean=.9,sd=.15)
means.sim[i]=mean(Y)
}
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.3,0.4), ylim=c(0, 1.5))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.3,1.4), ylim=c(0, 1.5))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 1.5))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 5))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 15))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 100))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
curve(dnorm(x,mean=0.9,sd=(.15/sqrt(500))))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
curve(dnorm(x,mean=0.9,sd=(.15/sqrt(500))))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
xstd=(.15/(sqrt500))
xstd=(.15/(sqrt(500))
xstd
xstd=(.15/(sqrt(500)))
xstd
hist(means.sim, probability = F, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
curve(dnorm(x,mean=0.9,sd=xstd),col="blue",lwd=2,add=TRUE)
hist(means.sim, probability = F, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
hist(means.sim, probability = F, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 50))
hist(means.sim, probability = F, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 100))
hist(means.sim, probability = F, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 150))
curve(dnorm(x,mean=0.9,sd=xstd),col="blue",lwd=2,add=TRUE)
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 50))
curve(dnorm(x,mean=0.9,sd=xstd),col="blue",lwd=2,add=TRUE)
xstd=(.15/(sqrt(125)))
xstd
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 50))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
curve(dnorm(x,mean=0.9,sd=xstd),col="blue",lwd=2,add=TRUE)
c?
pnorm?
?pnorm
?c
?pnorm
pnorm(.92,mean=mean(means.sim),sd=sd(means.sim))
o.92=pnorm(.92,mean=mean(means.sim),sd=sd(means.sim))
1-o.92
o.92
n9=35
prob9=rbinom(n9,size=1,prob=.3)
prob9
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y)
}
mean(means9.sim)
mean(prob9)
means9.sim
prob9
prob9
prob9
rbinom(n9,size=1,prob=.3)
rbinom(n9,size=1,prob=.3)
rbinom(n9,size=1,prob=.3)
mean(rbinom(n9,size=1,prob=.3))
mean(rbinom(n9,size=1,prob=.3))
mean(rbinom(n9,size=1,prob=.3))
mean(rbinom(n9,size=1,prob=.3))
mean(rbinom(n9,size=1,prob=.3))
mean(rbinom(n9,size=1,prob=.3))
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y)
}
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y)
}
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y)
}
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y)
}
hist(means9.sim, probability = T, main="Histogram of Sample means")
> hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
> hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
hist(means.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 30))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.8,1), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.75,1.25), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.5,1.25), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.75,1.25), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.5,1.1), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0,1.1), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.4,1.2), ylim=c(0, 2.5))
?rbinom
for(i in 1:nsim){
Y9=mean(rbinom(n9,size=1,prob=0.3))
means9.sim[i]=mean(Y)
}
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=mean(rbinom(n9,size=1,prob=0.3))
means9.sim[i]=mean(Y)
}
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.4,1.2), ylim=c(0, 2.5))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.4,1.2), ylim=c(0, 2.5),breaks=10)
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.4,1.2), ylim=c(0, 2.5),breaks=20)
nsim=500
means9.sim=rep(o,nsim)
means9.sim=rep(0,nsim)
for(i in 1:nsim){
Y9=rbinom(n9,size=1,prob=0.3)
means9.sim[i]=mean(Y9)
}
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0.4,1.2), ylim=c(0, 2.5),breaks=20)
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0,0.6), ylim=c(0, 50))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0,0.6), ylim=c(0, 8))
hist(means9.sim, probability = T, main="Histogram of Sample means", xlim=c(0,0.6), ylim=c(0, 6))
pnorm(1,mean=0,sd=sqrt(1))
pnorm(2,mean=0,sd=sqrt(1))
pnorm(2,mean=0,sd=sqrt(1)) - pnorm(1,mean=0,sd=sqrt(1))
qt(.975,1190)
x=seq(-4,4,by=0.01)
fx=dt(x,df=9)
?df
?dt
plot(x,fx,type="1")
plot(x,fx,type="l")
x=seq(-5,5,by=0.01)
f3.x=dt(x,df=3)
f20.x=dt(x,df=20)
fnorm.x=dnorm(x,mean=0,sd=1)
plot(x,f3.x,type="l",ylab="",col="red",lty=1,ylim=c(0.42))
plot(x,f3.x,type="l",ylab="",col="red",lty=1,ylim=c(0,.42))
points(x,f20.x,type="l",col="blue",lty=2)
points(x,fnorm.x,type="l",col="black",lty=3)
?lty
??lty
legend(-4,0.3,legend=c("T_3","T_20","N(0,1)"),col=c("red","blue","black"),lty=1:3,cex=0.8)
?pt
pt(-1,df=9)
pt(1,df=9)-pt(-1,df=9)
pt(1)
pt(1,df=1)
pt(.9995,df=1)
dt(.9995,df=1)
qt(.9995,df=1)
pt(1,df=9)-pt(-1,df=9)
clear
n=4
Sample=runif(n,min=0,max=1)
sampleMean=mean(Sample)
sampleSD=sd(sample)
sampleSD=sd(Sample)
SE=sampleSD/sqrt(n)
t.score=qt(.975,df=(n-1))
CI.lower=sampleMean-(t.score*SE)
CI.upper=sampleMean+(t.score*SE)
c(CI.lower,CI.upper)
nsim=1000
CIs=array(NA,dim=c(nsim,2))
n=4
for(i in 1:nsim){
Sample=runif(n,min=0,max=1)
sampleMean=mean(Sample)
sampleSD=sd(Sample)
SE=sampleSD/sqrt(n)
t.score=qt(.975,df=(n-1))
CI.lower=sampleMean-(t.score*SE)
CI.upper=sampleMean+(t.score*SE)
CIs[i, ] = c(CI.lower, CI.upper)
}
mu=0.5
mean( (CIs[,1]<=mu) & (mu<=CIs[,2]) )
nsim=1000
CIs2=array(NA,dim=c(nsim,2))
n=4
for(i in 1:nsim){}
for(i in 1:nsim){
sample2=rt(n,df=2)
sampleMean2=(sample2)
sampleSD2=sd(sample2)
SE2=sampleSD2/sqrt(n)
t.score2=qt(.975,df=(n-1))
CI.lower2=sampleMean2-(t.score2*SE2)
CI.upper2=sampleMean2+(t.score2*SE2)
CIs2[i, ] = c(CI.lower2, CI.upper2)
}
for(i in 1:nsim){
sample2=rt(n,df=2)
sampleMean2=(sample2)
sampleSD2=sd(sample2)
SE2=sampleSD2/sqrt(n)
t.score2=qt(.975,df=(n-1))
CI.lower2=sampleMean2-(t.score2*SE2)
CI.upper2=sampleMean2+(t.score2*SE2)
CIs2[i, ] = c(CI.lower2, CI.upper2)
}
nsim=1000
CIs2=array(NA,dim=c(nsim,2))
n=4
for(i in 1:nsim){
sample2=rt(n,df=2)
sampleMean2=(sample2)
sampleSD2=sd(sample2)
SE2=sampleSD2/sqrt(n)
t.score2=qt(.975,df=(n-1))
CI.lower2=sampleMean2-(t.score2*SE2)
CI.upper2=sampleMean2+(t.score2*SE2)
CIs2[i, ] = c(CI.lower2, CI.upper2)
}
for(i in 1:nsim){
sample2=rt(n,df=2)
sampleMean2=mean(sample2)
sampleSD2=sd(sample2)
SE2=sampleSD2/sqrt(n)
t.score2=qt(.975,df=(n-1))
CI.lower2=sampleMean2-(t.score2*SE2)
CI.upper2=sampleMean2+(t.score2*SE2)
CIs2[i, ] = c(CI.lower2, CI.upper2)
}
mu2=0
mean( (CIs2[,1]<=mu) & (mu<=CIs2[,2]) )
nsim=1000
CIs3=array(NA,dim=c(nsim,2))
n=4
nsim=1000
CIs3=array(NA,dim=c(nsim,2))
n=20
for(i in 1:nsim){
sample3=rt(n,df=2)
sampleMean3=mean(sample3)
sampleSD2=sd(sample3)
SE3=sampleSD3/sqrt(n)
t.score3=qt(.975,df=(n-1))
CI.lower3=sampleMean3-(t.score3*SE2)
CI.upper3=sampleMean3+(t.score3*SE2)
CIs3[i, ] = c(CI.lower3, CI.upper3)
}
for(i in 1:nsim){
sample3=rt(n,df=2)
sampleMean3=mean(sample3)
sampleSD3=sd(sample3)
SE3=sampleSD3/sqrt(n)
t.score3=qt(.975,df=(n-1))
CI.lower3=sampleMean3-(t.score3*SE2)
CI.upper3=sampleMean3+(t.score3*SE2)
CIs3[i, ] = c(CI.lower3, CI.upper3)
}
mu3=0
mean( (CIs3[,1]<=mu) & (mu<=CIs3[,2]) )
mean( (CIs3[,1]<=mu3) & (mu3<=CIs3[,2]) )
n=4
CIs2=array(NA,dim=c(nsim,2))
for(i in 1:nsim){
sample2=rt(n,df=2)
sampleMean2=mean(sample2)
sampleSD2=sd(sample2)
SE2=sampleSD2/sqrt(n)
t.score2=qt(.975,df=(n-1))
CI.lower2=sampleMean2-(t.score2*SE2)
CI.upper2=sampleMean2+(t.score2*SE2)
CIs2[i, ] = c(CI.lower2, CI.upper2)
}
mu2=0
mean( (CIs2[,1]<=mu2) & (mu2<=CIs2[,2]) )
mean( (CIs2[,1]<=mu) & (mu<=CIs2[,2]) )
set.seed(1)
n=5
Sample=rnorm(n,mean=0,sd=1)
(sampleMean = mean(Sample))
(SampleSD=sd(Sample))
x=seq(-3,3,by=.1)
y=dnorm(x,mean=0,sd=1)
curve(dnorm(x,mean=0,sd=1))
curve(dnorm(x,mean=0,sd=1, xlim=c(-3,3), ylim=c(0, 30)))
curve(dnorm(x,mean=0,sd=1, xlim=c(-3,3)), ylim=c(0, 30))
curve(dnorm(x,mean=0,sd=1), xlim=c(-3,3), ylim=c(0, 30))
curve(dnorm(x,mean=0,sd=1), xlim=c(-3,3), ylim=c(0,2))
curve(dnorm(x,mean=0,sd=1), xlim=c(-3,3), ylim=c(0,.5))
n1=10
prob1=rnorm(n,mean=.5,sd=.166)
prob1=rnorm(n1,mean=.5,sd=.166)
xstd1=.166/sqrt(10)
xsdt1
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,1))
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,1.5))
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,5))
curve(dnorm(x,mean=.5,sd=.166))
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,5))
curve(dnorm(x,mean=.5,sd=.166),lwd=2,add=TRUE)
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,5))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
hist(prob1,probability = T,xlim=c(0,1),ylim=c(0,10))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
nsim=500
nsim=50
means.sim=rep(0,nsim)
for(i in 1:nsim){
Y=rnorm(n,mean=.9,sd=.15)
means.sim[i]=mean(Y)
}
for(i in 1:nsim){
Y=rnorm(n1,mean=.5,sd=.166)
means.sim[i]=mean(Y)
}
hist(means.sim,probability = T,xlim=c(0,1),ylim=c(0,10))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
nsim=100
means.sim=rep(0,nsim)
for(i in 1:nsim){
Y=rnorm(n1,mean=.5,sd=.166)
means.sim[i]=mean(Y)
}
hist(means.sim,probability = T,xlim=c(0,1),ylim=c(0,10))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
nsim=500
means.sim=rep(0,nsim)
for(i in 1:nsim){
Y=rnorm(n1,mean=.5,sd=.166)
means.sim[i]=mean(Y)
}
hist(means.sim,probability = T,xlim=c(0,1),ylim=c(0,10))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
nsim=1000
means.sim=rep(0,nsim)
for(i in 1:nsim){
Y=rnorm(n1,mean=.5,sd=.166)
means.sim[i]=mean(Y)
}
hist(means.sim,probability = T,xlim=c(0,1),ylim=c(0,10))
curve(dnorm(x,mean=.5,sd=xstd1),lwd=2,add=TRUE)
?sample
?dnorm
install.packages("ggplot2")
print("helloworld")
print(cars)
clear
cls
library("ggplot2")
cars <- read.csv("~/GitHub/480X_forks/02-DataVis-5Ways/cars-sample.csv")
View(cars)
source('~/GitHub/480X_forks/02-DataVis-5Ways/cars-Rggplot.R', encoding = 'UTF-8')
cars = read.csv("cars-sample.csv")
pwd
cwd
ls
cars = read.csv("cars-sample.csv")
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
cars = read.csv("cars-sample.csv")
print(cars)
}
make_graph()
cars = read.csv("./cars-sample.csv")
make_graph <- function(){
library("ggplot2")
print("helloworld")
cars = read.csv("./cars-sample.csv")
print(cars)
}
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("~/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
print(cars)
}
make_graph()
getwd()
setwd("~/Documents/github/480X_forks/02-DataVis-5Ways")
setwd("C:/Users/Documents/github/480X_forks/02-DataVis-5Ways")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
print(cars)
}
make_graph()
View(cars)
cars.sample <- read.csv("~/GitHub/480X_forks/02-DataVis-5Ways/cars-sample.csv")
View(cars.sample)
cars.sample <- read.csv("~/GitHub/480X_forks/02-DataVis-5Ways/cars-sample.csv")
View(cars.sample)
make_graph <- function(){
library("ggplot2")
#print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
car2 <- data(cars.sample)
print(cars2)
}
make_graph()
make_graph <- function(){
library("ggplot2")
#print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
cars2 <- data(cars.sample)
print(cars2)
}
make_graph()
View(cars.sample)
cars_sample <- read.csv("~/GitHub/480X_forks/02-DataVis-5Ways/cars-sample.csv")
View(cars_sample)
make_graph <- function(){
library("ggplot2")
#print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
cars2 <- data(cars_sample)
print(cars2)
}
make_graph()
make_graph <- function(){
library("ggplot2")
#print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
cars2 <- data(cars_sample)
print(cars_sample)
print(cars2)
}
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
#aes_cars <-
ggplot(cars_sample, aes(x=Weight, y=MPG, color=Manufacturer)) + geom_point()
}
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
#aes_cars <-
ggplot(cars_sample, aes(x=Weight, y=MPG, color=Manufacturer)) + geom_point(dotsize=Weight)
}
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
#aes_cars <-
ggplot(cars_sample, aes(x=Weight, y=MPG, color=Manufacturer)) + geom_point(aes(size=Weight))
}
make_graph()
make_graph <- function(){
library("ggplot2")
print("helloworld")
setwd("C:/Users/Hunter/Documents/github/480X_forks/02-DataVis-5Ways")
cars = read.csv("./cars-sample.csv")
#print(cars)
#aes_cars <-
ggplot(cars_sample, aes(x=Weight, y=MPG, color=Manufacturer)) + geom_point(aes(alpha=0.5,size=Weight))
}
make_graph()
